/**
*
*   Parse SVG utility (part of Geometrize library)
*   https://github.com/foo123/Geometrize
*
**/
!function(e,t,s){"use strict";"object"==typeof module&&module.exports?(module.$deps=module.$deps||{})&&(module.exports=module.$deps[t]=s.call(e)):"function"==typeof define&&define.amd&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["module"],function(t){return s.moduleUri=t.uri,s.call(e)}):t in e||(e[t]=s.call(e)||1)&&"function"==typeof define&&define.amd&&define(function(){return e[t]})}("undefined"!=typeof self?self:this,"parseSVG",function(){"use strict";var f=/<(\/)?([a-z0-9_\-:]+?)\b\s*([^<>]*)\/?>/im,l=/([a-z0-9_\-:]+?)\b\s*(=\s*"([^"]*)")?/im,s=/[MLHVCSQTAZ]/gi,c=/(matrix|scale|rotate|translate|skewX|skewY)\s*\(([^\(\)]*)\)/im,h=/-?(?:(?:\d+\.\d+)|(?:\.\d+)|(?:\d+))/g,p=Object.prototype.hasOwnProperty;Math;function d(t){return t.trim()}function y(t){return t=t||"",parseFloat(t)||0}function u(t){var e=(t=d(String(t)).replace("-"," -")).match(s),c=t.split(s),p=[0,0],u=p;return e?e.reduce(function(t,e,s){var r,a,n,i,o,f=e===e.toLowerCase(),l=(d(c[s+1]||"").match(h)||[]).map(y);switch(e.toUpperCase()){case"M":p=[(f?p[0]:0)+l[0],(f?p[1]:0)+l[1]],u=p;break;case"H":for(;1<=l.length;)r=[p[0],p[1]],a=[(f?p[0]:0)+l.shift(),p[1]],p=a,t.push({type:"Line",points:[r,a]});break;case"V":for(;1<=l.length;)r=[p[0],p[1]],a=[p[0],(f?p[1]:0)+l.shift()],p=a,t.push({type:"Line",points:[r,a]});break;case"L":for(;2<=l.length;)r=[p[0],p[1]],a=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],p=a,t.push({type:"Line",points:[r,a]});break;case"A":for(;7<=l.length;)o={start:null,end:null,radiusX:l.shift(),radiusY:l.shift(),angle:l.shift(),largeArc:l.shift(),sweep:l.shift()},r=[p[0],p[1]],a=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],p=a,o.start=r,o.end=a,t.push({type:"Arc",params:o});break;case"Q":for(;4<=l.length;)r=[p[0],p[1]],a=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],n=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],p=n,t.push({type:"Quadratic",points:[r,a,n]});break;case"C":for(;6<=l.length;)r=[p[0],p[1]],a=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],n=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],i=[(f?p[0]:0)+l.shift(),(f?p[1]:0)+l.shift()],p=i,t.push({type:"Cubic",points:[r,a,n,i]});break;case"Z":r=[p[0],p[1]],a=[u[0],u[1]],u=p=a,t.push({type:"Line",points:[r,a],Z:!0})}return t},[]):[]}function m(t,e){var s,r,a,n,i,o=e.index||0;if(s=(t=t.slice(o)).match(f)){if("/"===s[1])return e.index=o+s.index+s[0].length,{match:s[0],tag:s[2].toLowerCase(),end:!0};t=function(t){for(var e,s={};e=t.match(l);)s[e[1].toLowerCase()]=!e[3]||d(e[3]),t=t.slice(e.index+e[0].length);return s}(s[3]);return t.style=(a={"stroke-width":1,stroke:1,"stroke-opacity":1,"stroke-linecap":1,"stroke-linejoin":1,fill:1,"fill-opacity":1,"fill-rule":1},n={"stroke-width":1,"stroke-opacity":1,"fill-opacity":1},i=d((r=t).style||"").split(";").reduce(function(t,e){var s=d(e).split(":"),e=s[0],s=s.slice(1).join(":");return p.call(a,e)&&(t[e]=1===n[e]?y(s):s),t},{}),Object.keys(a).forEach(function(t){p.call(r,t)&&(i[t]=1===n[t]?y(r[t]):r[t])}),i),t.transform=function(t){for(var e,s=d(t.transform||""),r=[];e=s.match(c);)r.push([d(e[1]).toLowerCase(),(d(e[2]).match(h)||[]).map(y)]),s=s.slice(e.index+e[0].length);return r.length?r:null}(t),e.index=o+s.index+s[0].length,{match:s[0],tag:s[2].toLowerCase(),atts:t}}}function t(t){return function t(e,s,r){for(var a,n,i,o,f,l=[],c=r?1:0;a=m(e,s);)switch(a.tag){case"line":a.end||l.push({type:"Line",transform:a.atts.transform,style:a.atts.style,points:[[y(a.atts.x1),y(a.atts.y1)],[y(a.atts.x2),y(a.atts.y2)]]});break;case"polyline":a.end||l.push({type:"Polyline",transform:a.atts.transform,style:a.atts.style,points:((a.atts.points||"").match(h)||[]).map(y).reduce(function(t,e,s){return s%2?t[(s-1)/2][1]=e:t.push([e,0]),t},[])});break;case"polygon":a.end||l.push({type:"Polygon",transform:a.atts.transform,style:a.atts.style,points:((a.atts.points||"").match(h)||[]).map(y).reduce(function(t,e,s){return s%2?t[(s-1)/2][1]=e:t.push([e,0]),t},[])});break;case"rect":a.end||(n=y(a.atts.x),i=y(a.atts.y),o=y(a.atts.width),f=y(a.atts.height),l.push({type:"Polygon",transform:a.atts.transform,style:a.atts.style,points:[[n,i],[n+o,i],[n+o,i+f],[n,i+f]]}));break;case"circle":a.end||l.push({type:"Circle",transform:a.atts.transform,style:a.atts.style,params:{center:[y(a.atts.cx),y(a.atts.cy)],radius:y(a.atts.r)}});break;case"ellipse":a.end||l.push({type:"Ellipse",transform:a.atts.transform,style:a.atts.style,params:{center:[y(a.atts.cx),y(a.atts.cy)],radiusX:y(a.atts.rx),radiusY:y(a.atts.ry),angle:0}});break;case"path":a.end||l.push({type:"Path",transform:a.atts.transform,style:a.atts.style,nodes:u(a.atts.d||"")});break;case"g":if(a.end){if("g"===r&&0==--c)return l}else"g"===r&&++c,l.push({type:"Group",transform:a.atts.transform,style:a.atts.style,nodes:t(e,s,"g")});break;case"svg":if(a.end){if("svg"===r&&0==--c)return l}else"svg"===r&&++c,l.push({type:"SVG",viewBox:a.atts.viewbox?a.atts.viewbox.match(h).map(y):[0,0,0,0],nodes:t(e,s,"svg")})}return l}(d(String(t)),{index:0})}return t.parsePath=u,t});